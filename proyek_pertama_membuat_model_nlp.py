# -*- coding: utf-8 -*-
"""Proyek Pertama_Membuat Model NLP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19wJV8f2GZEsf_l5AamBqh9oaN15zrbPJ

# Belajar Pengembangan Machine Learning - Proyek Pertama_Membuat Model NLP

## Data Diri

Nama : Adi Bintang Pradana <br>
Alamat : Jl. Budi Mulia No. 1, Jakarta <br>
No. HP : 087784537428 <br>
Email : adibintangprada@gmail.com

## Import Library
"""

import pandas as pd

"""## Load Dataset"""

df = pd.read_csv('dataset_review_tokped_labelled.csv')
df.head()

"""## Data Cleaning and Preprocessing"""

df = df.drop(columns=['Rating'])

df

label = pd.get_dummies(df.Sentiment)
df_baru = pd.concat([df, label], axis=1)
df_baru = df_baru.drop(columns='Sentiment')
df_baru

"""## Modelling - LSTM

### Train Test Split
"""

x = df_baru['Review'].values
y = df_baru[['negative', 'neutral', 'positive']].values

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)

"""### Build Model"""

from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
 
tokenizer = Tokenizer(num_words=5000, oov_token='x')
tokenizer.fit_on_texts(x_train) 
tokenizer.fit_on_texts(x_test)
 
sequence_train = tokenizer.texts_to_sequences(x_train)
sequence_test = tokenizer.texts_to_sequences(x_test)
 
padded_train = pad_sequences(sequence_train) 
padded_test = pad_sequences(sequence_test)

import tensorflow as tf
model = tf.keras.Sequential([
    tf.keras.layers.Embedding(input_dim=5000, output_dim=16),
    tf.keras.layers.LSTM(128),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(64, activation='relu'),
    tf.keras.layers.Dense(3, activation='softmax')
])
model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])

history = model.fit(padded_train, y_train, epochs=30, 
                    validation_data=(padded_test, y_test), verbose=2)

"""### Model Visualization"""

import matplotlib.pyplot as plt

"""#### Model Loss"""

plt.plot(history.history['loss'])
plt.title('Model Loss')
plt.ylabel('Loss')
plt.xlabel('Epoch')
plt.legend(['Train'], loc='upper right')
plt.show()

"""#### Model Accuracy"""

plt.plot(history.history['accuracy'])
plt.title('Model Accuracy')
plt.ylabel('Accuracy')
plt.xlabel('Epoch')
plt.legend(['Train'], loc='lower right')
plt.show()

